name: "(Tag): Prepare"

permissions:
  contents: write
  pull-requests: write
  actions: read

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to create the tag for (e.g. 3.6.9) or `next`'
        required: true
        type: string
        default: next

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout branch for release
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"

      - name: Install Composer dependencies
        run: composer install

      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event.inputs.version }}" = "next" ]; then
            CURR=$(composer get-version)
            MAJOR=$(echo $CURR | cut -d. -f1)
            MINOR=$(echo $CURR | cut -d. -f2)
            PATCH=$(echo $CURR | cut -d. -f3)
            NEW_PATCH=$((PATCH+1))
            NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          fi

  generate-changelog:
    needs: get-version
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: read
      models: read
    outputs:
      patch: ${{ steps.build.outputs.patch }}
    steps:
      - name: Checkout changelog-action private repo
        uses: actions/checkout@v4
        with:
          repository: codesnippetspro/changelog-action
          token: ${{ secrets.PRIVATE_ACTION_TOKEN }}
          path: changelog-action
      
      - name: Generate changelog & readme patch
        id: build
        uses: changelog-action
        with:
          repo: ${{ github.repository }}
          branch: ${{ github.ref_name }}
          tag: ${{ needs.get-version.outputs.version }}
      
          

  git-push:
    runs-on: ubuntu-latest
    needs: [get-version, generate-changelog]
    steps:
      - name: Checkout branch for release
        uses: actions/checkout@v4
      
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"

      - name: Install Composer dependencies
        run: composer install

      - name: Configure Git
        run: |
          git config user.name "code-snippets-bot"
          git config user.email "sre@codesnippets.pro"

      - name: Create and switch to tag branch
        run: |
          git checkout -b "tag/v${{ needs.get-version.outputs.version }}"

      - name: Commit changelog update
        run: |
          echo "${{ needs.generate-changelog.outputs.patch }}" | git apply -
          git ls-files --others --modified --exclude-standard | xargs git add
          git add -u
          git commit -m "chore(changelog): v${{ needs.get-version.outputs.version }}"
      
      - name: Commit version update
        run: |
          composer set-version -- --v=${{ needs.get-version.outputs.version }}
          git ls-files --others --modified --exclude-standard | xargs git add
          git add -u
          git commit -m "chore(tag): v${{ needs.get-version.outputs.version }}"
      
      - name: "Push to branch `tag/v${{ needs.get-version.outputs.version }}`"
        run: |
          git push --set-upstream origin "tag/v${{ needs.get-version.outputs.version }}"
      
      - name: "Open pull request: chore(release): `v${{ needs.get-version.outputs.version }}`"
        env:
          GH_TOKEN: ${{ secrets.TR_GH_TOKEN }}
        run: |
          gh pr create --title 'chore(release): `v${{ needs.get-version.outputs.version }}`' --body 'Release `v${{ needs.get-version.outputs.version }}`' --base main --head "tag/v${{ needs.get-version.outputs.version }}"
